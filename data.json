{
    "basic_info": {"name": "Galabe Oryn", "email": "oryngalabe@gmail.com"},
        "summary": "I am a passionate Full Stack Developer with expertise in Python, Django, Flask, and responsive web design.",
        "certifications": [
            {"title": "100 Days Of Code: The Complete Python Pro BootCamp", "platform": "Udemy", "date": "2025", "certificate_file": "certifications/udemy-cert.pdf"}
        ],
        "skills": {"technical": ["Python", "Django", "Flask", "HTML", "CSS", "Bootstrap", "SQLAlchemy", "Web Automation", "Data Analysis", "GUI"]},
    "projects": {
        "Porfolio Website": {
            "project_id": "7e13b5ac-de8f-4484-8183-df237ac7edb8",
            "signed_id": "243ba27cacfc9c40fcde5ed6522d6d1c561671472403252e0d8db409ed1a4297",
            "title": "Porfolio Website",
            "overview": "A portfolio website built using Flask(Python), HTML, CSS and Bootstrap, designed to showcase my skills and projects in a visually appealing and mobile-responsive format",
            "description": "<p>The&nbsp;<strong>Portfolio Website </strong>reflects my<strong> </strong>commitment to clean design<strong>,&nbsp;</strong>offering a professional and user-friendly way to present my work.</p>\r\n\r\n<p>Key feartures include:</p>\r\n\r\n<ol>\r\n\t<li><strong>Mobile-First Design:</strong>\r\n\r\n\t<ul>\r\n\t\t<li>Built with focus on mobile responsiveness, the site ensures seemless user experience across devices.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>Dynamic Content Rendering:</strong>\r\n\t<ul>\r\n\t\t<li>The site uses a&nbsp;<strong>data.json&nbsp;</strong>file to dynamically load project details into the Bootstrap cards. This simplifies updates and keeps content structured and maintanable.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>Admin Features:</strong>\r\n\t<ul>\r\n\t\t<li>A session-based authentication system enables admin-specific activities, allowing me to manage and update the site efficiently.</li>\r\n\t</ul>\r\n\t</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n",
            "link": "https://github.com/oryn-woo/Portfolio.git"
        },
        "Bambili Housing": {
            "project_id": "bb15c85c-cafb-4558-bd17-eb1b6ce968e4",
            "signed_id": "61d97c46d525977927a3d41c6ec4f0b39c6315ba786a8a77ab0fe7bad47cbbe1",
            "title": "Bambili Housing",
            "overview": "This Website enables students in our university locality, to rent houses remotely, eliminating need for physical visits and minimize reliance on middlemen (current students.).",
            "description": "<p>The&nbsp;<strong>Bambili Housing Site&nbsp;</strong>is built using Flask(Python), HTML, and CSS, designed to address the challenges of students face when searching for houses in the Bambili area.</p>\r\n\r\n<p>This project was inspired by the growing problem of&nbsp;<strong>scams&nbsp;</strong>&nbsp;involving middlemen who explot newcomers unfamiliar with the local village, leading to loss of money and trust. Additionaly, the site reduces the need for students to physically visit the village, which is costly and unsafe due to ongoing insecurity.</p>\r\n\r\n<p><strong>Key features.</strong></p>\r\n\r\n<ol>\r\n\t<li><strong>House Listings:</strong>\r\n\r\n\t<ul>\r\n\t\t<li>Each house is represented by a unique card on the listing page. Clicking on the card directs users to a detailed page about the selected house, where the can view comprehensive descriptions, reviews and additional details.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>Media Galleries:</strong>\r\n\t<ul>\r\n\t\t<li>House images are showed using a responsive Bootstrap carousel with autoplay functionality. Users can access a detailed gallery to view photos and videos, enhancing their decision-making process.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>Efficient Data Queries:</strong>\r\n\t<ul>\r\n\t\t<li>The site uses&nbsp;<strong>joinload&nbsp;</strong>for optimized database querying and lazy loading for images, ensuring fast performance even on low bandwidth networks.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>House Uploads:</strong>\r\n\t<ul>\r\n\t\t<li>Landlords can upload house details via a form built with Flask-WTForms. Although currently a single form, plans are in place to split the process into multi-step form to reduce data loss in case of errorss.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>Authentication System:</strong>\r\n\t<ul>\r\n\t\t<li>A login and signup system verifies lanlords before they can upload houses. There is no restriction on the number of houses a lanlord can list, allowing flexibility for users with multiple properties.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>Tranperency Through Reviews:</strong>\r\n\t<ul>\r\n\t\t<li>Reviews from previous tenants promote transperency and discourage lanlord misconduct. This feature empowers tenants and helps prevent any form of bullying, as landlords are held accountable for their actions</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>Text-Based Location:</strong>\r\n\t<ul>\r\n\t\t<li>Due to limitations in Google Maps coverage for this region, location data is text-based, ensuring accessibility while considering local challenges.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>Network Optimization:</strong>\r\n\t<ul>\r\n\t\t<li>Recongnizing the region&#39;s poor network connectivity, the site is designed to function efficiently even under minimal bandwidth conditions, prioritizing accessibility for users.</li>\r\n\t</ul>\r\n\t</li>\r\n</ol>\r\n\r\n<p>Looking ahead, the&nbsp;<strong>Bambili Housing site</strong>&nbsp;will continue evolving to improve its functionality and user experience. Future updates include splitting upload form, exploring better location protocols, and enhancing performance for low-network environments.</p>\r\n\r\n<p>The site addresses critical pain points for students and newcomers, ensuring safety, convinience, and fairness in housing search process</p>\r\n",
            "link": "https://github.com/oryn-woo/Bambili-Housing-Site.git"
        },
        "Bambili E-Commerce Site ": {
            "project_id": "b7fd7e5c-b5db-4854-af2a-a78d91f254e5",
            "signed_id": "4941cce6211901fce14ee059f2e1a1b3f12c818906867cafb27eb6ae0f3555cc",
            "title": "Bambili E-Commerce Site ",
            "overview": "An e-commerce platform designed to empower local university students and businesses  by providing central space to showcase and sell their products, eliminating dependency on WhatsApp groups.",
            "description": "<p>The&nbsp;<strong>Bambili E-Commerce Site&nbsp;</strong>is a web platform built using Flask (Python), HTML, CSS and SQLAlchemy (Python), designed to facilitate buisiness integration within the university locality. The site aims to provide students with skills (such as,&nbsp;<strong><em>graphic design, phone repairs, software developement, fashion, etc)</em></strong>, as well as&nbsp;<strong><em>enterprises</em></strong>, with an accessible way to list and sell their offerings directly to customers.</p>\r\n\r\n<p>This project was inspired by the limitations of relying on WhatsApp groups, which often plagued by:</p>\r\n\r\n<ul>\r\n\t<li><strong>Bullying&nbsp;</strong>and unfair restrictions imposed by group admins.</li>\r\n\t<li><strong>Scam risk,&nbsp;</strong>which cloned accounts targeting buyers and sellers.</li>\r\n\t<li><strong>Inefficiency&nbsp;</strong>in reaching the right audience or maintaining consistent communication.</li>\r\n</ul>\r\n\r\n<p><strong>Key Features of the site includes</strong></p>\r\n\r\n<ol>\r\n\t<li><strong>Streamlined Buisiness Intergration:</strong>\r\n\r\n\t<ul>\r\n\t\t<li>A user-friendly interface makes it easy for students and small businesses to showcase their skills, products, or servicesand connect directly with potential customers without relying on external social media platforms.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>Database and Scalability:</strong>\r\n\t<ul>\r\n\t\t<li><strong>\u200b\u200b\u200b\u200b\u200b\u200b\u200bSQlite is used during developement for simplicity, with plans to migrate to PostgreSQL in production, ensuring the system scales effectively as user demand grows.</strong></li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>\u200b\u200b\u200b\u200b\u200b\u200b\u200bFuture Mobile Money Intergration:</strong>\r\n\t<ul>\r\n\t\t<li><strong>\u200b\u200b\u200b\u200b\u200b\u200b\u200b</strong>Developement is ongoing to implement the MTN Mobile Money API, enabling seamless payment. This intergration will remove the dependency on third-party payment solutions and make transactions more accessible for users in the region.</li>\r\n\t</ul>\r\n\t</li>\r\n</ol>\r\n\r\n<p>The site is part of an initiative to create a solution tailored to underdeveloped areas. By addressing specific pain points, it empowers local talent and encourages entrepreneurial growth, and fosters a more connected community.</p>\r\n",
            "link": "https://github.com/oryn-woo/e-commerce-site.git"
        },
        "Directory Hierarchy ": {
            "project_id": "d4f8aae0-7c61-408d-bf48-73f842237b7b",
            "signed_id": "680f523ec32f7d80f9acb8debf83649b3cc1e0b92690a61147efcf560b84ff17",
            "title": "Directory Hierarchy ",
            "overview": "A python script designed to organize files into structured directories based on file types and to parse .txt files for extracting data in pre-defined patterns.",
            "description": "<p>The&nbsp;<strong>Auto Directory Hierarchy&nbsp;</strong>script streamlines file management for the&nbsp;<strong><a href=\"https://github.com/oryn-woo/Bambili-Housing-Site.git\">Bambili Housing Site,&nbsp;</a></strong>offering a seamless way to organize collected survey data (images, videos, and txt files) and prepare it for uploading to the website. The script enhancesworkflow efficiency by automating directory creation and parsing information directly from .txt files.</p>\r\n\r\n<p><strong>Key features of the script include:</strong></p>\r\n\r\n<ol>\r\n\t<li><strong>Automated Directory Organization:</strong>\r\n\r\n\t<ul>\r\n\t\t<li><strong>Using Python&#39;s os and osmule modules, the script navigates directories and organizes selected files into a hirarchical structure based on file types. The hirachy is as follows:</strong>\r\n\r\n\t\t<ul>\r\n\t\t\t<li><strong>\u200b\u200b\u200b\u200b\u200b\u200b\u200bRoot Directory:&nbsp;</strong>Created with the current date (e.g. 2025-04-30)</li>\r\n\t\t\t<li><strong>House Title (Name) Directory:&nbsp;</strong>Crated with the name of the house collected in the txt file.</li>\r\n\t\t\t<li><strong>Subdirectories:</strong>\r\n\t\t\t<ul>\r\n\t\t\t\t<li><strong>\u200b\u200b\u200b\u200b\u200b\u200b\u200bImages</strong></li>\r\n\t\t\t\t<li><strong>Videos</strong></li>\r\n\t\t\t\t<li><strong>Text Files</strong></li>\r\n\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t\t</li>\r\n\t\t<li><strong>\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b</strong>This ensures data is grouped logically, improving accessibility and reducing manual effort.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>File Selection With Tkinter Dialog:</strong>\r\n\t<ul>\r\n\t\t<li><strong>\u200b\u200b\u200b\u200b\u200b\u200b\u200b</strong>The script employs Tkinter&#39;s <strong>askopenfilename&nbsp;</strong>dialog, allowing users to select survey files easily. Once selected, the script automatically organizes the files based on their type.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>Text File Parsing:</strong>\r\n\t<ul>\r\n\t\t<li>The script supports parsing .txt files with predefined formats for extracting housing details. the required format is&nbsp;</li>\r\n\t\t<li><strong>Title: ....</strong></li>\r\n\t\t<li><strong>Brief: ...</strong></li>\r\n\t\t<li><strong>Location: ...</strong></li>\r\n\t\t<li><strong>Desc: ...</strong></li>\r\n\t\t<li>The fields are parsed for streamlined intergration into the housing database.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>Future Intergration With Website:</strong>\r\n\t<ul>\r\n\t\t<li><strong>\u200b\u200b\u200b\u200b\u200b\u200b\u200b</strong>Future Intergration will enable automatic database uploads. After collecting data during field surveys, parsed data will be rendered via the click of a button directly to the housing site, saving time and reducing errors.</li>\r\n\t</ul>\r\n\t</li>\r\n</ol>\r\n\r\n<p>This tool complements the&nbsp;<strong><a href=\"https://github.com/oryn-woo/Bambili-Housing-Site.git\">Bambili Housing Site&nbsp;</a></strong>by simplifying the process of uploading house details, particularly for landlords or administrators collecting large amounts of data. With its hierarchical directory organization and parsing capabilities, the script ensures structured, error-free workflows.</p>\r\n",
            "link": "https://github.com/oryn-woo/Auto-directory-script.git"
        },
        "Color Hunt App": {
            "project_id": "dc43ff16-a165-405a-98f6-52f2e41841fa",
            "signed_id": "8b7e33f46a41468acd50e14fa84a0c0565d0dee89d2bb85c41c87bd68b331a37",
            "title": "Color Hunt App",
            "overview": "A Desktop application built with Tkinter to simplify color extraction from images and save the results as JPEG files with embedded hex codes for easy refence",
            "description": "<p>The&nbsp;<strong>Custom Color Hunt App&nbsp;</strong>leverages Tkinter as its graphical interface and utilizes the <strong><em>PyPI colorgram&nbsp;</em></strong>library to extract a user-defined number of colors from and uploaded image. Designed for quick and efficient workflows, the app features</p>\r\n\r\n<ol>\r\n\t<li><strong>Image Upload:</strong>\r\n\r\n\t<ul>\r\n\t\t<li><strong>\u200b\u200b\u200b\u200b\u200b\u200b\u200b</strong>Users can upload their desired image directly through the interface, enabling precise color extraction tailored to their creative needs.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>Color Extraction:</strong>\r\n\t<ul>\r\n\t\t<li><strong>\u200b\u200b\u200b\u200b\u200b\u200b\u200b</strong>The&nbsp;<strong><em>colorgram&nbsp;</em></strong>library processes the uploaded image and extracts the specified number of dominant colors. These colors are displayed along with their hex codes.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>Hex Code Copy Functionality:</strong>\r\n\t<ul>\r\n\t\t<li><strong>\u200b\u200b\u200b\u200b\u200b\u200b\u200b</strong>A button integrated with the&nbsp;<strong><em>paperclip&nbsp;</em></strong>library allows users to copy hex codes to the clipboard instantly, streamlining their ability to use the colors in design tools or coding projects.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>Saving Results:</strong>\r\n\t<ul>\r\n\t\t<li>\u200b\u200b\u200b\u200b\u200b\u200b\u200bExtracted colors can be saved as&nbsp;<strong><em>JPEG&nbsp;</em></strong>fies, with hex codes overlayed for convenient storage and sharing.</li>\r\n\t</ul>\r\n\t</li>\r\n</ol>\r\n",
            "link": "https://github.com/oryn-woo/Color-Hunt-App.git"
        },
        "Space Invaders": {
            "project_id": "f87ebfbb-8a01-4618-a8f3-120d3bc0f091",
            "signed_id": "107f65f667d757aed538623ce9ad7f2f356bbbd6e3f4333efb448bbf83dd134d",
            "title": "Space Invaders",
            "overview": "A retro-style Space Invaders game built with Python's built in Turtle module, employing object-oriented programming to manage game components like alien, shooter, bullets and score.",
            "description": "<p>The&nbsp;<strong>Space Invaders&nbsp;</strong>Game<strong>&nbsp;</strong>is an arcade project i developed using pythin Turtle graphics library. The game is architected with strong emphasis on object-oriented-programming-seperated classes are used to encapsolate the properties of the shooter, aliens, and scoreboard.</p>\r\n\r\n<p>These classes are then integrated in the main program file to create the complete gaming experience.</p>\r\n\r\n<p>One of the major challenges encountered was collision detection. Since the Turtle module deos not provide built-in border box feature, a custom collision detection algorithm was implemented to efficiently determine interactions between moving objects.</p>\r\n",
            "link": "https://github.com/oryn-woo/Space-Invaders.git"
        },
        "Tic-Tac-Teo": {
            "project_id": "43aa58ce-65b9-4846-8788-ddfcdc86ca13",
            "signed_id": "db8bb70035b03c3f401d8eacfe2519ccb897538dbb44ea1c74e8b28ce34c932b",
            "title": "Tic-Tac-Teo",
            "overview": "A GUI and Text Base version of the TIC-TAC-TEO game. Build with OOP, leveraging Tkinter and ttkinter libraries, for rich features, and smooth gaming experience.",
            "description": "<p><strong>Tic-Tac-Teo Game Features.</strong></p>\r\n\r\n<ul>\r\n\t<li><strong>Built with Tkinter:&nbsp;</strong>Leveraging Tkinter&#39;s capabilities to create and engaging and user-friendly interface.</li>\r\n\t<li><strong>Object Oriented Design:&nbsp;</strong>Both the text-based and GUI versions are built using Object-Oriented-Programming (OOP) principles, facilitating easy developement, upgrades, and feature improvements.</li>\r\n</ul>\r\n",
            "link": "https://github.com/oryn-woo/Tic-Tac-Teo.git"
        },
        "PDF-Audiobook": {
            "project_id": "65c6d685-be32-4d0b-b6de-5fade18cbc4c",
            "signed_id": "c12a0d3e058ac57896c64f66a3c3ef11ae86641204cbc825f4e0162e81221f53",
            "title": "PDF-Audiobook",
            "overview": "An App that converts pdf file to and audio book. It is build with the following libraries; pyttsx3, pdfplumber, and pydub. It has a GUI build with Tkinter.",
            "description": "<p><strong>PDF to AudioBook App Features.</strong></p>\r\n\r\n<ul>\r\n\t<li><strong>PDF Text Extraction.&nbsp;</strong>Utilizes the&nbsp;<strong><em>pdfplumber&nbsp;</em></strong>library to extract text from the PDF files.</li>\r\n\t<li><strong>Speech Synthesis.&nbsp;</strong>Employs the pyttsx3 library for text-to-speech conversion.</li>\r\n\t<li>Audio Management. Leverages <strong><em>tempfile&nbsp;</em></strong>&nbsp;for temporary file management and <strong><em>pydub </em></strong>for audio segment manipulation.</li>\r\n\t<li><strong>User Interface.&nbsp;</strong>Features a simple and intuitive graphical interface built with <strong><em>tkinter.</em></strong></li>\r\n</ul>\r\n\r\n<p>&nbsp;<strong>Current Status:</strong></p>\r\n\r\n<p>The app is currently under developement, with plans to incoporate additional customizable features.</p>\r\n",
            "link": "https://github.com/oryn-woo/PDF-AUDIO-BOOK.git"
        },
        "Caf\u00e9 WIFI Site.": {
            "project_id": "8d1211a8-d11a-45e3-9413-32a62b5ee317",
            "signed_id": "77ff310103f5be7b357b94e7d1cbe796d371e95f3b74b8f2aa39d20e8df8ce84",
            "title": "Caf\u00e9 WIFI Site.",
            "overview": "A website for caf\u00e9 listing in and area. Built with Flask (Python), Bootstrap, WTForms, and SQLAlchemy. features a mobile responsive layout with vibrant coffee colors.",
            "description": "<p><strong>Cafe Wifi Website Features.</strong></p>\r\n\r\n<ul>\r\n\t<li><strong>User-Generated-Content:&nbsp;</strong>Allows users to upload and share their favorite cafes.</li>\r\n\t<li><strong>Convenient Features:&nbsp;</strong>Provides a range of features for a seamless user experience.</li>\r\n\t<li><strong>Elegant Design:&nbsp;</strong>Features a sophisticated design with coffee-inspired color scheme and keyframe animations.</li>\r\n\t<li><strong>Streamlined Forms:&nbsp;</strong>Utilizes WTForms for smooth and intuitive form layouts.</li>\r\n</ul>\r\n",
            "link": "https://github.com/oryn-woo/cafe-wifi-site.git"
        },
        "Watermark App": {
            "project_id": "ace13508-0483-45fb-a1c0-a9ab41e21d7b",
            "signed_id": "6a2ef61aebd8fc01b63e2e1c98b3b5a5db1e42dbbd5468a2ac809f610753569a",
            "title": "Watermark App",
            "overview": "An image watermarking app build with tkinter. All features are highly customizable by the users, with a simple layout, for smooth user experience.",
            "description": "<p><strong>Tkinter Watermark App Features</strong></p>\r\n\r\n<ul>\r\n\t<li><strong>Image Watermarking:&nbsp;</strong>Allows users to add customizable watermarks to images using <strong><em>PIL&nbsp;</em></strong>&nbsp;library.</li>\r\n\t<li><strong>Customization Options:</strong>\r\n\t<ul>\r\n\t\t<li>Watermark position&#39;</li>\r\n\t\t<li>Color</li>\r\n\t\t<li>Opacity</li>\r\n\t\t<li>Text</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>Output Management:&nbsp;</strong>Enables users to specify the storage location for watermarked images.</li>\r\n</ul>\r\n",
            "link": "https://github.com/oryn-woo/watermark-app.git"
        },
        "Disappearing Text App": {
            "project_id": "2db21254-893d-4a35-8af0-513e053456de",
            "signed_id": "62b467e0888687ac25c0c6f11ec2ef11b30257e7b52de8124661566514807e88",
            "title": "Disappearing Text App",
            "overview": "An app which clears a users data after a certain period of inactivity. It's build with tkinter, with some customizable features.",
            "description": "<p><strong>Features</strong></p>\r\n\r\n<ul>\r\n\t<li><strong>Disappearing Text Effect:&nbsp;</strong>Text vanishes when&nbsp; typing pauses.</li>\r\n\t<li><strong>Progress Bar</strong>: Visual timer indicating the time left before text disappears.</li>\r\n\t<li><strong>Mode Toggle:&nbsp;</strong>Option to disable the disappearing effect</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n",
            "link": "https://github.com/oryn-woo/Disappearing-Text-App.git"
        },
        "Arcade Breakout Game": {
            "project_id": "4a110f00-f216-4ad0-a312-1ee184c1175e",
            "signed_id": "cd379e8bd282b0310cd589f058e9b4df4702a5e95900a0728d8339629c63cbd7",
            "title": "Arcade Breakout Game",
            "overview": "A game built using Object-Oriented-Programming principles, and the turtle module (Python), for smooth gaming experience, while promoting smooth upgrades.  ",
            "description": "<p><strong>The Game Features:</strong></p>\r\n\r\n<p><strong>Game Elements:&nbsp;</strong>Seperate classes manage bricks, scores, paddle and ball.</p>\r\n\r\n<p><strong>Gameplay:&nbsp;</strong>Classic Breakout arcade gameplay</p>\r\n",
            "link": "https://github.com/oryn-woo/breakout-game.git"
        }
    }
}